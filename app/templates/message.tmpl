<div class="page-header">
  <h4>메세지
    <small id="room-name"></small>
  </h4>
</div>
<div class="panel panel-default">
  <div id="messages" class="panel-body">
  </div>
  <div class="panel-footer">
    <div class="media">
      <div class="media-body">
        <form id="chatbox">
          <input type="text" class="form-control" id="message" placeholder="메세지를 입력하세요">
        </form>
      </div>
    </div>
  </div>
</div>
<script type="text/javascript">
  var socket = null;

  // 화면에 message를 보여줌
  function addMessage(message) {
          var msg = $("<div>").addClass("media-body").append($("<p>").text(message));
          $("#messages").append($("<div>").addClass("media").append(msg));
  }

  // 소켓 연결이 완료되지 않은 경우, 소켓 연결이 완료될 때 까지 대기 후 callback 실행
  function waitForSocketConnection(socket, callback) {
          setTimeout(
                  function() {
                          if (socket.readyState === 1) {
                                  if (callback != null) {
                                          callback();
                                  }
                                  return;
                          } else {
                                  console.log("wait for connection...")
                                  waitForSocketConnection(socket, callback);
                          }

                  }, 5); // 소켓 연결이 완료될 때 까지 5 milisecond 단위로 소켓 연결 상태 확인
  }

  $(function() {
          var msgBox = $("#chatbox input#message");
          // "chatbox"를 submit 하면 소켓을 통해 "chatbox"에 입력한 메세지 전송

          socket = new WebSocket(socketEndPoint);
          socket.onopen = function() {
            alert("socket has been opened!")
          }
          socket.onmessage = function(e) {
                  addMessage(e.data);
          }

          $("#chatbox").submit(function() {
            console.log("type message : " + msgBox.val());
                  if (!msgBox.val()) return false;
                  if (!socket) {
                          console.log("Error: There is no socket connection.");
                          return false;
                  }
                  waitForSocketConnection(socket, function() {
                          socket.send(msgBox.val());
                          msgBox.val("");
                  });
                  return false;
          });
  });
</script>
